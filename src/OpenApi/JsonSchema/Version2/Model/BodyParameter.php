<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Jane\OpenApi\JsonSchema\Version2\Model;

use Jane\JsonSchemaRuntime\Reference;

class BodyParameter extends \ArrayObject
{
    /**
     * A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
     *
     * @var string
     */
    protected $description;
    /**
     * The name of the parameter.
     *
     * @var string
     */
    protected $name;
    /**
     * Determines the location of the parameter.
     *
     * @var string
     */
    protected $in;
    /**
     * Determines whether or not this parameter is required or optional.
     *
     * @var bool
     */
    protected $required;
    /**
     * A deterministic version of a JSON Schema object.
     *
     * @var Schema
     */
    protected $schema;

    /**
     * A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
     *
     * @return string
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
     *
     * @param string $description
     *
     * @return self
     */
    public function setDescription(?string $description): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * The name of the parameter.
     *
     * @return string
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * The name of the parameter.
     *
     * @param string $name
     *
     * @return self
     */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Determines the location of the parameter.
     *
     * @return string
     */
    public function getIn(): ?string
    {
        return $this->in;
    }

    /**
     * Determines the location of the parameter.
     *
     * @param string $in
     *
     * @return self
     */
    public function setIn(?string $in): self
    {
        $this->in = $in;

        return $this;
    }

    /**
     * Determines whether or not this parameter is required or optional.
     *
     * @return bool
     */
    public function getRequired(): ?bool
    {
        return $this->required;
    }

    /**
     * Determines whether or not this parameter is required or optional.
     *
     * @param bool $required
     *
     * @return self
     */
    public function setRequired(?bool $required): self
    {
        $this->required = $required;

        return $this;
    }

    /**
     * A deterministic version of a JSON Schema object.
     *
     * @return Schema|Reference
     */
    public function getSchema()
    {
        return $this->schema;
    }

    /**
     * A deterministic version of a JSON Schema object.
     *
     * @param Schema|Reference $schema
     *
     * @return self
     */
    public function setSchema($schema): self
    {
        $this->schema = $schema;

        return $this;
    }
}
