<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Jane\OpenApi\JsonSchema\Version2\Model;

class OpenApi extends \ArrayObject
{
    /**
     * The Swagger version of this document.
     *
     * @var string
     */
    protected $swagger;
    /**
     * General information about the API.
     *
     * @var Info
     */
    protected $info;
    /**
     * The host (name or ip) of the API. Example: 'swagger.io'.
     *
     * @var string
     */
    protected $host;
    /**
     * The base path to the API. Example: '/api'.
     *
     * @var string
     */
    protected $basePath;
    /**
     * The transfer protocol of the API.
     *
     * @var string[]
     */
    protected $schemes;
    /**
     * @var string[]
     */
    protected $consumes;
    /**
     * @var string[]
     */
    protected $produces;
    /**
     * Relative paths to the individual endpoints. They must be relative to the 'basePath'.
     *
     * @var mixed[]|PathItem[]
     */
    protected $paths;
    /**
     * One or more JSON objects describing the schemas being consumed and produced by the API.
     *
     * @var Schema[]
     */
    protected $definitions;
    /**
     * One or more JSON representations for parameters.
     *
     * @var BodyParameter[]|HeaderParameterSubSchema[]|FormDataParameterSubSchema[]|QueryParameterSubSchema[]|PathParameterSubSchema[]
     */
    protected $parameters;
    /**
     * One or more JSON representations for parameters.
     *
     * @var Response[]
     */
    protected $responses;
    /**
     * @var string[][][]
     */
    protected $security;
    /**
     * @var BasicAuthenticationSecurity[]|ApiKeySecurity[]|Oauth2ImplicitSecurity[]|Oauth2PasswordSecurity[]|Oauth2ApplicationSecurity[]|Oauth2AccessCodeSecurity[]
     */
    protected $securityDefinitions;
    /**
     * @var Tag[]
     */
    protected $tags;
    /**
     * information about external documentation.
     *
     * @var ExternalDocs
     */
    protected $externalDocs;

    /**
     * The Swagger version of this document.
     *
     * @return string
     */
    public function getSwagger(): ?string
    {
        return $this->swagger;
    }

    /**
     * The Swagger version of this document.
     *
     * @param string $swagger
     *
     * @return self
     */
    public function setSwagger(?string $swagger): self
    {
        $this->swagger = $swagger;

        return $this;
    }

    /**
     * General information about the API.
     *
     * @return Info
     */
    public function getInfo(): ?Info
    {
        return $this->info;
    }

    /**
     * General information about the API.
     *
     * @param Info $info
     *
     * @return self
     */
    public function setInfo(?Info $info): self
    {
        $this->info = $info;

        return $this;
    }

    /**
     * The host (name or ip) of the API. Example: 'swagger.io'.
     *
     * @return string
     */
    public function getHost(): ?string
    {
        return $this->host;
    }

    /**
     * The host (name or ip) of the API. Example: 'swagger.io'.
     *
     * @param string $host
     *
     * @return self
     */
    public function setHost(?string $host): self
    {
        $this->host = $host;

        return $this;
    }

    /**
     * The base path to the API. Example: '/api'.
     *
     * @return string
     */
    public function getBasePath(): ?string
    {
        return $this->basePath;
    }

    /**
     * The base path to the API. Example: '/api'.
     *
     * @param string $basePath
     *
     * @return self
     */
    public function setBasePath(?string $basePath): self
    {
        $this->basePath = $basePath;

        return $this;
    }

    /**
     * The transfer protocol of the API.
     *
     * @return string[]
     */
    public function getSchemes(): ?array
    {
        return $this->schemes;
    }

    /**
     * The transfer protocol of the API.
     *
     * @param string[] $schemes
     *
     * @return self
     */
    public function setSchemes(?array $schemes): self
    {
        $this->schemes = $schemes;

        return $this;
    }

    /**
     * @return string[]
     */
    public function getConsumes(): ?array
    {
        return $this->consumes;
    }

    /**
     * @param string[] $consumes
     *
     * @return self
     */
    public function setConsumes(?array $consumes): self
    {
        $this->consumes = $consumes;

        return $this;
    }

    /**
     * @return string[]
     */
    public function getProduces(): ?array
    {
        return $this->produces;
    }

    /**
     * @param string[] $produces
     *
     * @return self
     */
    public function setProduces(?array $produces): self
    {
        $this->produces = $produces;

        return $this;
    }

    /**
     * Relative paths to the individual endpoints. They must be relative to the 'basePath'.
     *
     * @return mixed[]|PathItem[]
     */
    public function getPaths()
    {
        return $this->paths;
    }

    /**
     * Relative paths to the individual endpoints. They must be relative to the 'basePath'.
     *
     * @param mixed[]|PathItem[] $paths
     *
     * @return self
     */
    public function setPaths($paths): self
    {
        $this->paths = $paths;

        return $this;
    }

    /**
     * One or more JSON objects describing the schemas being consumed and produced by the API.
     *
     * @return Schema[]
     */
    public function getDefinitions(): ?\ArrayObject
    {
        return $this->definitions;
    }

    /**
     * One or more JSON objects describing the schemas being consumed and produced by the API.
     *
     * @param Schema[] $definitions
     *
     * @return self
     */
    public function setDefinitions(?\ArrayObject $definitions): self
    {
        $this->definitions = $definitions;

        return $this;
    }

    /**
     * One or more JSON representations for parameters.
     *
     * @return BodyParameter[]|HeaderParameterSubSchema[]|FormDataParameterSubSchema[]|QueryParameterSubSchema[]|PathParameterSubSchema[]
     */
    public function getParameters(): ?\ArrayObject
    {
        return $this->parameters;
    }

    /**
     * One or more JSON representations for parameters.
     *
     * @param BodyParameter[]|HeaderParameterSubSchema[]|FormDataParameterSubSchema[]|QueryParameterSubSchema[]|PathParameterSubSchema[] $parameters
     *
     * @return self
     */
    public function setParameters(?\ArrayObject $parameters): self
    {
        $this->parameters = $parameters;

        return $this;
    }

    /**
     * One or more JSON representations for parameters.
     *
     * @return Response[]
     */
    public function getResponses(): ?\ArrayObject
    {
        return $this->responses;
    }

    /**
     * One or more JSON representations for parameters.
     *
     * @param Response[] $responses
     *
     * @return self
     */
    public function setResponses(?\ArrayObject $responses): self
    {
        $this->responses = $responses;

        return $this;
    }

    /**
     * @return string[][][]
     */
    public function getSecurity(): ?array
    {
        return $this->security;
    }

    /**
     * @param string[][][] $security
     *
     * @return self
     */
    public function setSecurity(?array $security): self
    {
        $this->security = $security;

        return $this;
    }

    /**
     * @return BasicAuthenticationSecurity[]|ApiKeySecurity[]|Oauth2ImplicitSecurity[]|Oauth2PasswordSecurity[]|Oauth2ApplicationSecurity[]|Oauth2AccessCodeSecurity[]
     */
    public function getSecurityDefinitions(): ?\ArrayObject
    {
        return $this->securityDefinitions;
    }

    /**
     * @param BasicAuthenticationSecurity[]|ApiKeySecurity[]|Oauth2ImplicitSecurity[]|Oauth2PasswordSecurity[]|Oauth2ApplicationSecurity[]|Oauth2AccessCodeSecurity[] $securityDefinitions
     *
     * @return self
     */
    public function setSecurityDefinitions(?\ArrayObject $securityDefinitions): self
    {
        $this->securityDefinitions = $securityDefinitions;

        return $this;
    }

    /**
     * @return Tag[]
     */
    public function getTags(): ?array
    {
        return $this->tags;
    }

    /**
     * @param Tag[] $tags
     *
     * @return self
     */
    public function setTags(?array $tags): self
    {
        $this->tags = $tags;

        return $this;
    }

    /**
     * information about external documentation.
     *
     * @return ExternalDocs
     */
    public function getExternalDocs(): ?ExternalDocs
    {
        return $this->externalDocs;
    }

    /**
     * information about external documentation.
     *
     * @param ExternalDocs $externalDocs
     *
     * @return self
     */
    public function setExternalDocs(?ExternalDocs $externalDocs): self
    {
        $this->externalDocs = $externalDocs;

        return $this;
    }
}
